{"uid":"7e3e077b51063c5f","name":"test_add_contact[None: lastname~e\\\\xXQ: : addressZFN:]","fullName":"test.test_add_contact#test_add_contact","historyId":"57635619f50de162b54d35da070a3832","time":{"start":1691751253458,"stop":1691751256389,"duration":2931},"status":"failed","statusMessage":"AssertionError: assert [392: new las... address, ...] == [392: new las... address, ...]\n  At index 20 diff: None: lastname~e\\xXQ: : addressZFN: != 424: lastname~exXQ: : addressZFN:\n  Use -v to get more diff","statusTrace":"app = <fixture.application.Application object at 0x0000026ACC87B3D0>, db = <fixture.db.DbFixture object at 0x0000026ACC858E50>, json_contacts = None: lastname~e\\xXQ: : addressZFN:\n\n    def test_add_contact(app, db, json_contacts):\n        contact = json_contacts\n        with allure.step('Given a contact list'):\n            old_contacts = db.get_contact_list()\n        with allure.step('When I add contact %s to the list' % contact):\n            app.contact.create(contact)\n        with allure.step('Then the new contact list is equal to the old contact list with the added contact'):\n            new_contacts = db.get_contact_list()\n            old_contacts.append(contact)\n>           assert sorted(old_contacts, key=ContactData.id_or_max) == sorted(new_contacts, key=ContactData.id_or_max)\nE           assert [392: new las... address, ...] == [392: new las... address, ...]\nE             At index 20 diff: None: lastname~e\\xXQ: : addressZFN: != 424: lastname~exXQ: : addressZFN:\nE             Use -v to get more diff\n\ntest\\test_add_contact.py:15: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"db","time":{"start":1691751240560,"stop":1691751240572,"duration":12},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0},{"name":"stop","time":{"start":1691751240560,"stop":1691751240560,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0},{"name":"app","time":{"start":1691751253360,"stop":1691751253458,"duration":98},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert [392: new las... address, ...] == [392: new las... address, ...]\n  At index 20 diff: None: lastname~e\\xXQ: : addressZFN: != 424: lastname~exXQ: : addressZFN:\n  Use -v to get more diff","statusTrace":"app = <fixture.application.Application object at 0x0000026ACC87B3D0>, db = <fixture.db.DbFixture object at 0x0000026ACC858E50>, json_contacts = None: lastname~e\\xXQ: : addressZFN:\n\n    def test_add_contact(app, db, json_contacts):\n        contact = json_contacts\n        with allure.step('Given a contact list'):\n            old_contacts = db.get_contact_list()\n        with allure.step('When I add contact %s to the list' % contact):\n            app.contact.create(contact)\n        with allure.step('Then the new contact list is equal to the old contact list with the added contact'):\n            new_contacts = db.get_contact_list()\n            old_contacts.append(contact)\n>           assert sorted(old_contacts, key=ContactData.id_or_max) == sorted(new_contacts, key=ContactData.id_or_max)\nE           assert [392: new las... address, ...] == [392: new las... address, ...]\nE             At index 20 diff: None: lastname~e\\xXQ: : addressZFN: != 424: lastname~exXQ: : addressZFN:\nE             Use -v to get more diff\n\ntest\\test_add_contact.py:15: AssertionError","steps":[{"name":"Given a contact list","time":{"start":1691751253458,"stop":1691751253464,"duration":6},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0},{"name":"When I add contact None: lastname~e\\xXQ: : addressZFN: to the list","time":{"start":1691751253464,"stop":1691751256389,"duration":2925},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0},{"name":"Then the new contact list is equal to the old contact list with the added contact","time":{"start":1691751256389,"stop":1691751256389,"duration":0},"status":"failed","statusMessage":"AssertionError: assert [392: new las... address, ...] == [392: new las... address, ...]\n  At index 20 diff: None: lastname~e\\xXQ: : addressZFN: != 424: lastname~exXQ: : addressZFN:\n  Use -v to get more diff\n","statusTrace":"  File \"C:\\Users\\denis.berg\\PycharmProjects\\python_training\\test\\test_add_contact.py\", line 15, in test_add_contact\n    assert sorted(old_contacts, key=ContactData.id_or_max) == sorted(new_contacts, key=ContactData.id_or_max)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"hasContent":true,"stepsCount":0}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"hasContent":true,"stepsCount":3},"afterStages":[{"name":"db::fin","time":{"start":1691751262568,"stop":1691751262568,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0},{"name":"stop::fin","time":{"start":1691751262570,"stop":1691751263438,"duration":868},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0}],"labels":[{"name":"parentSuite","value":"test"},{"name":"suite","value":"test_add_contact"},{"name":"host","value":"bergd-nb"},{"name":"thread","value":"35872-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test.test_add_contact"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"json_contacts","value":"None: lastname~e\\xXQ: : addressZFN:"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"7e3e077b51063c5f.json","parameterValues":["None: lastname~e\\xXQ: : addressZFN:"]}