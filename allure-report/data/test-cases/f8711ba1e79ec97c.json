{"uid":"f8711ba1e79ec97c","name":"test_add_group[None:name~E OGY:header:{Zr Sv U|YQ_M:footer;^ bWNj'@L3]","fullName":"test.test_add_group#test_add_group","historyId":"ed46576aa7d92609e1ac4778ccc824bc","time":{"start":1691751217010,"stop":1691751218047,"duration":1037},"status":"failed","statusMessage":"AssertionError: assert [414:name4:he...r_XYf =-, ...] == [414:name4:he...r_XYf =-, ...]\n  Left contains one more item: None:name~E OGY:header:{Zr Sv U|YQ_M:footer;^ bWNj'@L3\n  Use -v to get more diff","statusTrace":"app = <fixture.application.Application object at 0x000001C4E83F95B0>, db = <fixture.db.DbFixture object at 0x000001C4E83D8FD0>, json_groups = None:name~E OGY:header:{Zr Sv U|YQ_M:footer;^ bWNj'@L3, check_ui = False\n\n    def test_add_group(app, db, json_groups, check_ui):\n        group = json_groups\n        with allure.step('Given a group list'):\n            old_groups = db.get_group_list()\n        with allure.step('When I add a group %s to the list' % group):\n            app.group.create(group)\n        with allure.step('Then the new group list is equal to the old group list with the added group'):\n            new_groups = db.get_group_list()\n            old_groups.append(group)\n>           assert sorted(old_groups, key=Group.id_or_max) == sorted(new_groups, key=Group.id_or_max)\nE           AssertionError: assert [414:name4:he...r_XYf =-, ...] == [414:name4:he...r_XYf =-, ...]\nE             Left contains one more item: None:name~E OGY:header:{Zr Sv U|YQ_M:footer;^ bWNj'@L3\nE             Use -v to get more diff\n\ntest\\test_add_group.py:15: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"db","time":{"start":1691751207613,"stop":1691751207644,"duration":31},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0},{"name":"stop","time":{"start":1691751207613,"stop":1691751207613,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0},{"name":"app","time":{"start":1691751216989,"stop":1691751217010,"duration":21},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0},{"name":"check_ui","time":{"start":1691751217010,"stop":1691751217010,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert [414:name4:he...r_XYf =-, ...] == [414:name4:he...r_XYf =-, ...]\n  Left contains one more item: None:name~E OGY:header:{Zr Sv U|YQ_M:footer;^ bWNj'@L3\n  Use -v to get more diff","statusTrace":"app = <fixture.application.Application object at 0x000001C4E83F95B0>, db = <fixture.db.DbFixture object at 0x000001C4E83D8FD0>, json_groups = None:name~E OGY:header:{Zr Sv U|YQ_M:footer;^ bWNj'@L3, check_ui = False\n\n    def test_add_group(app, db, json_groups, check_ui):\n        group = json_groups\n        with allure.step('Given a group list'):\n            old_groups = db.get_group_list()\n        with allure.step('When I add a group %s to the list' % group):\n            app.group.create(group)\n        with allure.step('Then the new group list is equal to the old group list with the added group'):\n            new_groups = db.get_group_list()\n            old_groups.append(group)\n>           assert sorted(old_groups, key=Group.id_or_max) == sorted(new_groups, key=Group.id_or_max)\nE           AssertionError: assert [414:name4:he...r_XYf =-, ...] == [414:name4:he...r_XYf =-, ...]\nE             Left contains one more item: None:name~E OGY:header:{Zr Sv U|YQ_M:footer;^ bWNj'@L3\nE             Use -v to get more diff\n\ntest\\test_add_group.py:15: AssertionError","steps":[{"name":"Given a group list","time":{"start":1691751217010,"stop":1691751217010,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0},{"name":"When I add a group None:name~E OGY:header:{Zr Sv U|YQ_M:footer;^ bWNj'@L3 to the list","time":{"start":1691751217010,"stop":1691751218045,"duration":1035},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0},{"name":"Then the new group list is equal to the old group list with the added group","time":{"start":1691751218046,"stop":1691751218047,"duration":1},"status":"failed","statusMessage":"AssertionError: assert [414:name4:he...r_XYf =-, ...] == [414:name4:he...r_XYf =-, ...]\n  Left contains one more item: None:name~E OGY:header:{Zr Sv U|YQ_M:footer;^ bWNj'@L3\n  Use -v to get more diff\n","statusTrace":"  File \"C:\\Users\\denis.berg\\PycharmProjects\\python_training\\test\\test_add_group.py\", line 15, in test_add_group\n    assert sorted(old_groups, key=Group.id_or_max) == sorted(new_groups, key=Group.id_or_max)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"hasContent":true,"stepsCount":0}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"hasContent":true,"stepsCount":3},"afterStages":[{"name":"db::fin","time":{"start":1691751220242,"stop":1691751220242,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0},{"name":"stop::fin","time":{"start":1691751220244,"stop":1691751220933,"duration":689},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0}],"labels":[{"name":"parentSuite","value":"test"},{"name":"suite","value":"test_add_group"},{"name":"host","value":"bergd-nb"},{"name":"thread","value":"36360-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test.test_add_group"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"json_groups","value":"None:name~E OGY:header:{Zr Sv U|YQ_M:footer;^ bWNj'@L3"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"f8711ba1e79ec97c.json","parameterValues":["None:name~E OGY:header:{Zr Sv U|YQ_M:footer;^ bWNj'@L3"]}