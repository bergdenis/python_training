{"name": "test_add_group[None:name~E OGY:header:{Zr Sv U|YQ_M:footer;^ bWNj'@L3]", "status": "failed", "statusDetails": {"message": "AssertionError: assert [414:name4:he...r_XYf =-, ...] == [414:name4:he...r_XYf =-, ...]\n  Left contains one more item: None:name~E OGY:header:{Zr Sv U|YQ_M:footer;^ bWNj'@L3\n  Use -v to get more diff", "trace": "app = <fixture.application.Application object at 0x000001C4E83F95B0>, db = <fixture.db.DbFixture object at 0x000001C4E83D8FD0>, json_groups = None:name~E OGY:header:{Zr Sv U|YQ_M:footer;^ bWNj'@L3, check_ui = False\n\n    def test_add_group(app, db, json_groups, check_ui):\n        group = json_groups\n        with allure.step('Given a group list'):\n            old_groups = db.get_group_list()\n        with allure.step('When I add a group %s to the list' % group):\n            app.group.create(group)\n        with allure.step('Then the new group list is equal to the old group list with the added group'):\n            new_groups = db.get_group_list()\n            old_groups.append(group)\n>           assert sorted(old_groups, key=Group.id_or_max) == sorted(new_groups, key=Group.id_or_max)\nE           AssertionError: assert [414:name4:he...r_XYf =-, ...] == [414:name4:he...r_XYf =-, ...]\nE             Left contains one more item: None:name~E OGY:header:{Zr Sv U|YQ_M:footer;^ bWNj'@L3\nE             Use -v to get more diff\n\ntest\\test_add_group.py:15: AssertionError"}, "steps": [{"name": "Given a group list", "status": "passed", "start": 1691751217010, "stop": 1691751217010}, {"name": "When I add a group None:name~E OGY:header:{Zr Sv U|YQ_M:footer;^ bWNj'@L3 to the list", "status": "passed", "start": 1691751217010, "stop": 1691751218045}, {"name": "Then the new group list is equal to the old group list with the added group", "status": "failed", "statusDetails": {"message": "AssertionError: assert [414:name4:he...r_XYf =-, ...] == [414:name4:he...r_XYf =-, ...]\n  Left contains one more item: None:name~E OGY:header:{Zr Sv U|YQ_M:footer;^ bWNj'@L3\n  Use -v to get more diff\n", "trace": "  File \"C:\\Users\\denis.berg\\PycharmProjects\\python_training\\test\\test_add_group.py\", line 15, in test_add_group\n    assert sorted(old_groups, key=Group.id_or_max) == sorted(new_groups, key=Group.id_or_max)\n"}, "start": 1691751218046, "stop": 1691751218047}], "parameters": [{"name": "json_groups", "value": "None:name~E OGY:header:{Zr Sv U|YQ_M:footer;^ bWNj'@L3"}], "start": 1691751217010, "stop": 1691751218047, "uuid": "3e1606cf-bd75-443e-8b4b-54303760c6f7", "historyId": "ed46576aa7d92609e1ac4778ccc824bc", "testCaseId": "8e9b1d07ef6cdb67de3c4a3d82e10652", "fullName": "test.test_add_group#test_add_group", "labels": [{"name": "parentSuite", "value": "test"}, {"name": "suite", "value": "test_add_group"}, {"name": "host", "value": "bergd-nb"}, {"name": "thread", "value": "36360-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test.test_add_group"}]}