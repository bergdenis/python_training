{"name": "test_add_group[None:nameK` |=:headerZ%}T q ]k:footertlRrdcG3MU;;?'/|u^H]", "status": "failed", "statusDetails": {"message": "AssertionError: assert [388:name4:he...r_XYf =-, ...] == [388:name4:he...r_XYf =-, ...]\n  Left contains one more item: None:nameK` |=:headerZ%}T q ]k:footertlRrdcG3MU;;?'/|u^H\n  Use -v to get more diff", "trace": "app = <fixture.application.Application object at 0x00000238C0A3E820>, db = <fixture.db.DbFixture object at 0x00000238C0A2ADF0>, json_groups = None:nameK` |=:headerZ%}T q ]k:footertlRrdcG3MU;;?'/|u^H\n\n    def test_add_group(app, db, json_groups):\n        group = json_groups\n        with allure.step('Given a group list'):\n            old_groups = db.get_group_list()\n        with allure.step('When I add a group %s to the list' % group):\n            app.group.create(group)\n        with allure.step('Then the new group list is equal to the old group list with the added group'):\n            new_groups = db.get_group_list()\n            old_groups.append(group)\n>           assert sorted(old_groups, key=Group.id_or_max) == sorted(new_groups, key=Group.id_or_max)\nE           AssertionError: assert [388:name4:he...r_XYf =-, ...] == [388:name4:he...r_XYf =-, ...]\nE             Left contains one more item: None:nameK` |=:headerZ%}T q ]k:footertlRrdcG3MU;;?'/|u^H\nE             Use -v to get more diff\n\ntest\\test_add_group.py:15: AssertionError"}, "steps": [{"name": "Given a group list", "status": "passed", "start": 1691584301067, "stop": 1691584301067}, {"name": "When I add a group None:nameK` |=:headerZ%}T q ]k:footertlRrdcG3MU;;?'/|u^H to the list", "status": "passed", "start": 1691584301067, "stop": 1691584302232}, {"name": "Then the new group list is equal to the old group list with the added group", "status": "failed", "statusDetails": {"message": "AssertionError: assert [388:name4:he...r_XYf =-, ...] == [388:name4:he...r_XYf =-, ...]\n  Left contains one more item: None:nameK` |=:headerZ%}T q ]k:footertlRrdcG3MU;;?'/|u^H\n  Use -v to get more diff\n", "trace": "  File \"C:\\Users\\denis.berg\\PycharmProjects\\python_training\\test\\test_add_group.py\", line 15, in test_add_group\n    assert sorted(old_groups, key=Group.id_or_max) == sorted(new_groups, key=Group.id_or_max)\n"}, "start": 1691584302232, "stop": 1691584302243}], "parameters": [{"name": "json_groups", "value": "None:nameK` |=:headerZ%}T q ]k:footertlRrdcG3MU;;?'/|u^H"}], "start": 1691584301067, "stop": 1691584302243, "uuid": "3f2f2bb9-0dde-4fd8-8fb0-35871b144040", "historyId": "896ba99ace766439d7b7aa46efed0059", "testCaseId": "8e9b1d07ef6cdb67de3c4a3d82e10652", "fullName": "test.test_add_group#test_add_group", "labels": [{"name": "parentSuite", "value": "test"}, {"name": "suite", "value": "test_add_group"}, {"name": "host", "value": "bergd-nb"}, {"name": "thread", "value": "8816-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test.test_add_group"}]}