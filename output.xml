<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 2.9 (Python 3.9.0 on win32)" generated="20230809 16:55:10.096">
<suite id="s1" name="Group Scenarios" source="C:\Users\denis.berg\PycharmProjects\python_training\rf\group_scenarios.robot">
<kw name="Init Fixtures" library="rf.AddressBook" type="setup">
<status status="PASS" starttime="20230809 16:55:10.217" endtime="20230809 16:55:12.671"></status>
</kw>
<test id="s1-t1" name="Add new group">
<kw name="Get Group List" library="rf.AddressBook">
<assign>
<var>${old_list}</var>
</assign>
<msg timestamp="20230809 16:55:12.680" level="INFO">${old_list} = [388:name4:header4:footer4, 398:name3:header3:footer3, 399:name3:header3:footer3, 408:::, 409:name3:header3:footer3, 410:nameym =:headervZ]deC{8!t Y9V4[$RH:footer_XYf =-, 412:::, 413:namehb%:header%6p...</msg>
<status status="PASS" starttime="20230809 16:55:12.671" endtime="20230809 16:55:12.680"></status>
</kw>
<kw name="New Group" library="rf.AddressBook">
<arguments>
<arg>name1</arg>
<arg>header1</arg>
<arg>footer1</arg>
</arguments>
<assign>
<var>${group}</var>
</assign>
<msg timestamp="20230809 16:55:12.680" level="INFO">${group} = None:name1:header1:footer1</msg>
<status status="PASS" starttime="20230809 16:55:12.680" endtime="20230809 16:55:12.680"></status>
</kw>
<kw name="Create Group" library="rf.AddressBook">
<arguments>
<arg>${group}</arg>
</arguments>
<status status="PASS" starttime="20230809 16:55:12.680" endtime="20230809 16:55:14.703"></status>
</kw>
<kw name="Get Group List" library="rf.AddressBook">
<assign>
<var>${new_list}</var>
</assign>
<msg timestamp="20230809 16:55:14.703" level="INFO">${new_list} = [388:name4:header4:footer4, 398:name3:header3:footer3, 399:name3:header3:footer3, 408:::, 409:name3:header3:footer3, 410:nameym =:headervZ]deC{8!t Y9V4[$RH:footer_XYf =-, 412:::, 413:namehb%:header%6p...</msg>
<status status="PASS" starttime="20230809 16:55:14.703" endtime="20230809 16:55:14.703"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${old_list}</arg>
<arg>${group}</arg>
</arguments>
<status status="PASS" starttime="20230809 16:55:14.703" endtime="20230809 16:55:14.703"></status>
</kw>
<kw name="Group Lists Should Be Equal" library="rf.AddressBook">
<arguments>
<arg>${new_list}</arg>
<arg>${old_list}</arg>
</arguments>
<status status="PASS" starttime="20230809 16:55:14.711" endtime="20230809 16:55:14.711"></status>
</kw>
<status status="PASS" starttime="20230809 16:55:12.671" endtime="20230809 16:55:14.711" critical="yes"></status>
</test>
<test id="s1-t2" name="Delete group">
<kw name="Get Group List" library="rf.AddressBook">
<assign>
<var>${old_list}</var>
</assign>
<msg timestamp="20230809 16:55:14.719" level="INFO">${old_list} = [388:name4:header4:footer4, 398:name3:header3:footer3, 399:name3:header3:footer3, 408:::, 409:name3:header3:footer3, 410:nameym =:headervZ]deC{8!t Y9V4[$RH:footer_XYf =-, 412:::, 413:namehb%:header%6p...</msg>
<status status="PASS" starttime="20230809 16:55:14.711" endtime="20230809 16:55:14.719"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${old_list}</arg>
</arguments>
<assign>
<var>${len}</var>
</assign>
<msg timestamp="20230809 16:55:14.719" level="INFO">Length is 28</msg>
<msg timestamp="20230809 16:55:14.719" level="INFO">${len} = 28</msg>
<status status="PASS" starttime="20230809 16:55:14.719" endtime="20230809 16:55:14.719"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>random.randrange(${len})</arg>
<arg>random</arg>
</arguments>
<assign>
<var>${index}</var>
</assign>
<msg timestamp="20230809 16:55:14.732" level="INFO">${index} = 3</msg>
<status status="PASS" starttime="20230809 16:55:14.723" endtime="20230809 16:55:14.732"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${old_list}</arg>
<arg>${index}</arg>
</arguments>
<assign>
<var>${group}</var>
</assign>
<msg timestamp="20230809 16:55:14.732" level="INFO">${group} = 408:::</msg>
<status status="PASS" starttime="20230809 16:55:14.732" endtime="20230809 16:55:14.732"></status>
</kw>
<kw name="Delete Group" library="rf.AddressBook">
<arguments>
<arg>${group}</arg>
</arguments>
<status status="PASS" starttime="20230809 16:55:14.732" endtime="20230809 16:55:15.549"></status>
</kw>
<kw name="Get Group List" library="rf.AddressBook">
<assign>
<var>${new_list}</var>
</assign>
<msg timestamp="20230809 16:55:15.552" level="INFO">${new_list} = [388:name4:header4:footer4, 398:name3:header3:footer3, 399:name3:header3:footer3, 409:name3:header3:footer3, 410:nameym =:headervZ]deC{8!t Y9V4[$RH:footer_XYf =-, 412:::, 413:namehb%:header%6pZ-VKuaK=...</msg>
<status status="PASS" starttime="20230809 16:55:15.549" endtime="20230809 16:55:15.552"></status>
</kw>
<kw name="Remove Values From List" library="Collections">
<doc>Removes all occurrences of given ``values`` from ``list``.</doc>
<arguments>
<arg>${old_list}</arg>
<arg>${group}</arg>
</arguments>
<status status="PASS" starttime="20230809 16:55:15.552" endtime="20230809 16:55:15.552"></status>
</kw>
<kw name="Group Lists Should Be Equal" library="rf.AddressBook">
<arguments>
<arg>${new_list}</arg>
<arg>${old_list}</arg>
</arguments>
<status status="PASS" starttime="20230809 16:55:15.555" endtime="20230809 16:55:15.555"></status>
</kw>
<status status="PASS" starttime="20230809 16:55:14.711" endtime="20230809 16:55:15.556" critical="yes"></status>
</test>
<kw name="Destroy Fixtures" library="rf.AddressBook" type="teardown">
<status status="PASS" starttime="20230809 16:55:15.557" endtime="20230809 16:55:17.701"></status>
</kw>
<status status="PASS" starttime="20230809 16:55:10.107" endtime="20230809 16:55:17.701"></status>
</suite>
<statistics>
<total>
<stat pass="2" fail="0">Critical Tests</stat>
<stat pass="2" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="2" fail="0" id="s1" name="Group Scenarios">Group Scenarios</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
